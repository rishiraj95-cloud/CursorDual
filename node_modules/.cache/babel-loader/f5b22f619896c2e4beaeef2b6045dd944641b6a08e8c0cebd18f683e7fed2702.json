{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rich01\\\\Desktop\\\\CursorDual\\\\src\\\\components\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Container, Grid, Heading, useColorMode } from '@chakra-ui/react';\nimport FileUpload from './FileUpload';\nimport MetricsDisplay from './MetricsDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [metrics, setMetrics] = useState(null);\n  const {\n    colorMode\n  } = useColorMode();\n  const handleDataProcessed = processedMetrics => {\n    setMetrics(processedMetrics);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: \"container.xl\",\n    py: 8,\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      mb: 8,\n      textAlign: \"center\",\n      children: \"QA Metrics Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      templateColumns: \"1fr\",\n      gap: 8,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(FileUpload, {\n          onDataProcessed: handleDataProcessed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), metrics && /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(MetricsDisplay, {\n          metrics: metrics\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"CuX+Z6oAwY0cLG1r/Tq29SGz+c8=\", false, function () {\n  return [useColorMode];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Box","Container","Grid","Heading","useColorMode","FileUpload","MetricsDisplay","jsxDEV","_jsxDEV","Dashboard","_s","metrics","setMetrics","colorMode","handleDataProcessed","processedMetrics","maxW","py","children","mb","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","templateColumns","gap","onDataProcessed","_c","$RefreshReg$"],"sources":["C:/Users/rich01/Desktop/CursorDual/src/components/Dashboard.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, Container, Grid, Heading, useColorMode } from '@chakra-ui/react';\r\nimport FileUpload from './FileUpload';\r\nimport MetricsDisplay from './MetricsDisplay';\r\nimport { QAMetrics } from '../types';\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const [metrics, setMetrics] = useState<QAMetrics | null>(null);\r\n  const { colorMode } = useColorMode();\r\n\r\n  const handleDataProcessed = (processedMetrics: QAMetrics) => {\r\n    setMetrics(processedMetrics);\r\n  };\r\n\r\n  return (\r\n    <Container maxW=\"container.xl\" py={8}>\r\n      <Heading mb={8} textAlign=\"center\">\r\n        QA Metrics Dashboard\r\n      </Heading>\r\n      \r\n      <Grid templateColumns=\"1fr\" gap={8}>\r\n        <Box>\r\n          <FileUpload onDataProcessed={handleDataProcessed} />\r\n        </Box>\r\n        \r\n        {metrics && (\r\n          <Box>\r\n            <MetricsDisplay metrics={metrics} />\r\n          </Box>\r\n        )}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,OAAO,EAAEC,YAAY,QAAQ,kBAAkB;AAC9E,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9C,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAmB,IAAI,CAAC;EAC9D,MAAM;IAAEc;EAAU,CAAC,GAAGT,YAAY,CAAC,CAAC;EAEpC,MAAMU,mBAAmB,GAAIC,gBAA2B,IAAK;IAC3DH,UAAU,CAACG,gBAAgB,CAAC;EAC9B,CAAC;EAED,oBACEP,OAAA,CAACP,SAAS;IAACe,IAAI,EAAC,cAAc;IAACC,EAAE,EAAE,CAAE;IAAAC,QAAA,gBACnCV,OAAA,CAACL,OAAO;MAACgB,EAAE,EAAE,CAAE;MAACC,SAAS,EAAC,QAAQ;MAAAF,QAAA,EAAC;IAEnC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAEVhB,OAAA,CAACN,IAAI;MAACuB,eAAe,EAAC,KAAK;MAACC,GAAG,EAAE,CAAE;MAAAR,QAAA,gBACjCV,OAAA,CAACR,GAAG;QAAAkB,QAAA,eACFV,OAAA,CAACH,UAAU;UAACsB,eAAe,EAAEb;QAAoB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,EAELb,OAAO,iBACNH,OAAA,CAACR,GAAG;QAAAkB,QAAA,eACFV,OAAA,CAACF,cAAc;UAACK,OAAO,EAAEA;QAAQ;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAACd,EAAA,CA3BID,SAAmB;EAAA,QAEDL,YAAY;AAAA;AAAAwB,EAAA,GAF9BnB,SAAmB;AA6BzB,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}