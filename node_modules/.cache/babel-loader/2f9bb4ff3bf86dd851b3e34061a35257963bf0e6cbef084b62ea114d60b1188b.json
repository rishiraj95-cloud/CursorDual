{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rich01\\\\Desktop\\\\CursorDual\\\\src\\\\components\\\\MetricsDisplay.tsx\";\nimport React from 'react';\nimport { Box } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MetricsDisplay = ({\n  metrics,\n  rawData\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = MetricsDisplay;\nexport default MetricsDisplay;\nvar _c;\n$RefreshReg$(_c, \"MetricsDisplay\");","map":{"version":3,"names":["React","Box","jsxDEV","_jsxDEV","MetricsDisplay","metrics","rawData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rich01/Desktop/CursorDual/src/components/MetricsDisplay.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, Grid, Text, Flex } from '@chakra-ui/react';\r\nimport { QAMetrics, RawData } from '../types';\r\n\r\ninterface MetricsDisplayProps {\r\n  metrics: QAMetrics;\r\n  rawData: RawData[];\r\n}\r\n\r\nconst MetricsDisplay: React.FC<MetricsDisplayProps> = ({ metrics, rawData }) => {\r\n  return (\r\n    <Box>\r\n      {/* Add your metrics display logic here */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MetricsDisplay; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAA0B,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQzD,MAAMC,cAA6C,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAQ,CAAC,KAAK;EAC9E,oBACEH,OAAA,CAACF,GAAG;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV,CAAC;AAACC,EAAA,GANIP,cAA6C;AAQnD,eAAeA,cAAc;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}