{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rich01\\\\Desktop\\\\CursorDual\\\\src\\\\components\\\\MetricsDisplay.tsx\";\nimport React from 'react';\nimport { Box, Grid, Text } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MetricsDisplay = ({\n  metrics\n}) => {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    templateColumns: \"repeat(2, 1fr)\",\n    gap: 6,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      p: 4,\n      borderWidth: 1,\n      borderRadius: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontWeight: \"bold\",\n        children: \"Defect Leakage Rate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"2xl\",\n        children: [metrics.defectLeakageRate, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 4,\n      borderWidth: 1,\n      borderRadius: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontWeight: \"bold\",\n        children: \"Code Coverage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"2xl\",\n        children: [metrics.codeCoverage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 4,\n      borderWidth: 1,\n      borderRadius: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontWeight: \"bold\",\n        children: \"Performance Leakage Rate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"2xl\",\n        children: [metrics.performanceLeakage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 4,\n      borderWidth: 1,\n      borderRadius: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontWeight: \"bold\",\n        children: \"Bugs Per Phase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), metrics.bugsPerPhase.map(item => /*#__PURE__*/_jsxDEV(Text, {\n        children: [item.phase, \": \", item.count]\n      }, item.phase, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = MetricsDisplay;\nexport default MetricsDisplay;\nvar _c;\n$RefreshReg$(_c, \"MetricsDisplay\");","map":{"version":3,"names":["React","Box","Grid","Text","jsxDEV","_jsxDEV","MetricsDisplay","metrics","templateColumns","gap","children","p","borderWidth","borderRadius","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","defectLeakageRate","codeCoverage","performanceLeakage","bugsPerPhase","map","item","phase","count","_c","$RefreshReg$"],"sources":["C:/Users/rich01/Desktop/CursorDual/src/components/MetricsDisplay.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, Grid, Text } from '@chakra-ui/react';\r\nimport { QAMetrics } from '../types';\r\n\r\ninterface MetricsDisplayProps {\r\n  metrics: QAMetrics;\r\n}\r\n\r\nconst MetricsDisplay: React.FC<MetricsDisplayProps> = ({ metrics }) => {\r\n  return (\r\n    <Grid templateColumns=\"repeat(2, 1fr)\" gap={6}>\r\n      <Box p={4} borderWidth={1} borderRadius=\"lg\">\r\n        <Text fontWeight=\"bold\">Defect Leakage Rate</Text>\r\n        <Text fontSize=\"2xl\">{metrics.defectLeakageRate}%</Text>\r\n      </Box>\r\n      \r\n      <Box p={4} borderWidth={1} borderRadius=\"lg\">\r\n        <Text fontWeight=\"bold\">Code Coverage</Text>\r\n        <Text fontSize=\"2xl\">{metrics.codeCoverage}%</Text>\r\n      </Box>\r\n      \r\n      <Box p={4} borderWidth={1} borderRadius=\"lg\">\r\n        <Text fontWeight=\"bold\">Performance Leakage Rate</Text>\r\n        <Text fontSize=\"2xl\">{metrics.performanceLeakage}%</Text>\r\n      </Box>\r\n      \r\n      <Box p={4} borderWidth={1} borderRadius=\"lg\">\r\n        <Text fontWeight=\"bold\">Bugs Per Phase</Text>\r\n        {metrics.bugsPerPhase.map((item) => (\r\n          <Text key={item.phase}>\r\n            {item.phase}: {item.count}\r\n          </Text>\r\n        ))}\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MetricsDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}